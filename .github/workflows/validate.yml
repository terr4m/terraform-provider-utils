name: Validate

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: read-all

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
          cache: false

      - name: Go mod download
        run: go mod download

      - name: Run linters
        uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # v6.5.2
        with:
          version: latest
          args: --timeout=10m

      - name: Build
        run: |
          set -euo pipefail

          mkdir -p ./dist
          go build -o ./dist -v .

  generate:
    name: Generate
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
          cache: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Generate
        working-directory: ./tools
        run: |
          set -euo pipefail

          go mod download
          go generate ./...

      - name: Check diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  matrix:
    name: Matrix
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        shell: bash
    outputs:
      tf_versions: ${{ steps.setup.outputs.tf_versions }}
      k8s_versions: ${{ steps.setup.outputs.k8s_versions }}
    steps:
      - name: Setup
        id: setup
        run: |
          set -euo pipefail

          tf_versions="$(curl -s https://endoflife.date/api/terraform.json | jq -rc '[sort_by(.releaseDate) | reverse | .[0:4] | .[].latest]')"

          {
            echo "tf_versions=${tf_versions}"
          } >> "${GITHUB_OUTPUT}"

  test:
    name: Test
    needs:
      - build
      - generate
      - matrix
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        tf_version: ${{ fromJson(needs.matrix.outputs.tf_versions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
          cache: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.tf_version }}
          terraform_wrapper: false

      - name: Go mod download
        run: go mod download

      - name: Test
        env:
          TF_ACC: "1"
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.tf_version }}
        run: go test -v -timeout 120m -cover ./...
